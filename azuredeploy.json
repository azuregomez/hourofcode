{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": "hoc-vm-",
            "metadata": {
                "description": "Prefix for VM Names"
            }
        },
        "numberOfVMs": {
            "type": "int",
            "defaultValue": 25,
            "metadata": {
                "description": "Number of VMs"
            }
        },
        "vNetName": {
            "type": "string",
            "defaultValue": "hoc-vnet",
            "metadata": {
                "description": "VNet Name"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "hoc-subnet",
            "metadata": {
                "description": "Subnet Name"
            }
        },
        "vNetAddressSpace": {
            "type": "string",
            "defaultValue": "10.10.0.0/16",
            "metadata": {
                "description": "VNet Address Space"
            }
        },
        "subnetAddressSpace": {
            "type": "string",
            "defaultValue": "10.10.10.0/24",
            "metadata": {
                "description": "Subnet Address Space"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue":  "student",
            "metadata": {
                "description": "VM admin username"
            }
            
        },
        "adminPassword": {
            "type": "string",
            "defaultValue": "hourofcode1!",
            "metadata": {
                "description": "VM admin password"
            }
        }
    },
    "variables": {
        "publicIPPrefix": "[concat(parameters('vmNamePrefix'),'-pip-')]",
        "nicPrefix": "[concat(parameters('vmNamePrefix'),'-nic-')]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]",
        "scriptLocation": "https://hocstorage.blob.core.windows.net/public/get.minecraft.ee.ps1",
        "scriptFileName": "get.minecraft.ee.ps1"
    },
    "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "allow-rdp-nsg",
      "location": "[resourceGroup().location]",
      "properties": {
          "securityRules": [
          {
              "name": "AllowRDP",
              "properties": {
                  "description": "Rule",
                  "protocol": "Tcp",
                  "sourcePortRange": "*",
                  "destinationPortRange": "3389",
                  "sourceAddressPrefix": "*",
                  "destinationAddressPrefix": "*",
                  "access": "Allow",
                  "priority": 100,
                  "direction": "Inbound"
              }
          } ]
        }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', 'allow-rdp-nsg')]"       
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vNetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddressSpace')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'allow-rdp-nsg')]"
              }
            }
          }
        ]
      }
    },
    {
      "comments": "Public IPs for VMs",
      "apiVersion": "2017-08-01",
      "type": "Microsoft.Network/publicIPAddresses",      
      "name": "[concat(variables('publicIPPrefix'), copyindex(1))]",    
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "copy": {
        "name": "publicIpLoop",
        "count": "[parameters('numberOfVMs')]"
      },
      "properties": {
          "publicIPAllocationMethod": "Static"         
      }
    },
    {
      "comments": "Public NICs",
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicPrefix'), copyindex(1))]",      
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfVMs')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPPrefix'), copyindex(1))]"        
      ],
      "properties": {	      
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPPrefix'), copyindex(1)))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
        "comments" : "MC:EE VMs",
        "type": "Microsoft.Compute/virtualMachines",
        "copy": {
            "name": "VMLoop",
            "count": "[parameters('numberOfVMs')]"
        },
        "name": "[concat(parameters('vmNamePrefix'), copyindex(1))]",      			
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-03-30",
        "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicPrefix'), copyindex(1))]"
        ],
	    "properties": {
        	"hardwareProfile": {
					"vmSize": "Standard_DS3_v2"
			},
			"osProfile": {
					"computerName": "[concat(parameters('vmNamePrefix'), copyindex(1))]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
			},
			"storageProfile": {
					"imageReference": {
						"publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "rs5-pro",
                        "version": "latest"						
				},					
			"osDisk": {
                "name": "[concat(parameters('vmNamePrefix'), '-osdisk-',copyindex(1))]", 
                "createOption": "FromImage",
                "managedDisk": {
                    "storageAccountType": "Standard_LRS"
                },
				"caching": "ReadWrite"
					
			}
			},
			"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicPrefix'), copyindex(1)))]",							
						}					            						
					]
			}
		},
         "resources": [
                {
                    "type": "extensions",
                    "name": "CustomScriptExtension",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat(parameters('vmNamePrefix'), copyindex(1))]"
                    ],
                    "properties": {
                        "protectedSettings":{},
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.9",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[variables('scriptLocation')]"                                
                            ],
                            "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', './' , variables('scriptFileName'))]"                            
                        },
                        "provisioningState": "Succeeded"
                        
                    }
                }
        ]

	}
    ]
}